{"version":3,"sources":["components/NavBar.jsx","components/Event.jsx","components/Main.jsx","components/App.jsx","components/Login.jsx","index.js"],"names":["NavBar","props","state","username","sessionStorage","getItem","logOut","bind","fetch","credentials","then","res","json","result","setItem","console","log","forceUpdate","to","className","this","type","onClick","React","Component","Event","page","comment","currentEvent","showComment","newComment","handleChange","getCommentList","nextPage","lastPage","addComment","deleteComment","length","setState","event_id","error","event","target","id","value","requestOptions","method","headers","body","JSON","stringify","eventId","content","date","Date","commentId","event_summary","likeEvent","event_org","event_location","event_date","map","index","key","userName","userId","disabled","htmlFor","name","placeholder","rows","onChange","Main","selected","data","sortType","sortMode","searchQuery","searchField","focusEdit","flushing","getEventList","doSearch","lastEvent","closeEventInfo","nextEvent","deleteEvent","openEditForm","submitEvent","flushData","url","params","split","slice","parse","history","location","pathname","openEventInfo","path","window","pushState","scrollTo","err","e","preventDefault","onSubmit","style","display","data-toggle","data-target","height","width","viewBox","d","role","data-dismiss","aria-label","aria-hidden","withRouter","Header","App","Login","email","password","login","btoa","msg","alert","loginStatus","Index","ReactDOM","render","component","document","getElementById"],"mappings":"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","file":"static/js/main.569da525.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass NavBar extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      username: sessionStorage.getItem('userName')\r\n    };\r\n    this.logOut = this.logOut.bind(this)\r\n  };\r\n  logOut(){\r\n    fetch(`/index/logout`, {credentials: 'include' })\r\n        .then(res => res.json())\r\n        .then(result=>{\r\n            sessionStorage.setItem('LoginStatus', false)\r\n            console.log(result)\r\n            this.forceUpdate()\r\n        })\r\n  };\r\n  render(){\r\n    if(sessionStorage.getItem('LoginStatus') === 'false'){\r\n        return <Redirect to='/login' />\r\n    }else{\r\n      return(\r\n        <nav className=\"navbar navbar-light bg-light justify-content-end\">\r\n          <div>\r\n            <span className=\"navbar-text\">\r\n              {this.state.username}\r\n            </span>\r\n            <button className=\"btn btn-danger ml-2 my-2 my-sm-0\" type=\"button\" onClick={this.logOut}>Logout</button>\r\n          </div>\r\n        </nav>\r\n      )\r\n    }\r\n  };\r\n}\r\n\r\nexport default NavBar;\r\n","import React from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\n\r\nclass Event extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            page: 1,\r\n            comment: [],\r\n            currentEvent: this.props.currentEvent,\r\n            showComment: true,\r\n            newComment: '',\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.getCommentList = this.getCommentList.bind(this);\r\n        this.nextPage = this.nextPage.bind(this);\r\n        this.lastPage = this.lastPage.bind(this);\r\n        this.addComment = this.addComment.bind(this);\r\n        this.deleteComment = this.deleteComment.bind(this);\r\n    };\r\n    componentDidMount(){\r\n        if(this.props.currentEvent.length){\r\n            this.setState({\r\n                currentEvent: this.props.currentEvent\r\n            });\r\n            this.getCommentList(this.state.page);\r\n        }\r\n    };\r\n    componentDidUpdate(){\r\n        if(this.state.currentEvent !== this.props.currentEvent){\r\n            this.setState({\r\n                currentEvent: this.props.currentEvent,\r\n                page: 1,\r\n            })\r\n            this.getCommentList(1)\r\n        }\r\n    }\r\n    getCommentList(page){\r\n        fetch(`/api/comments/eventId/${this.props.currentEvent.event_id}/page/${page}`, {credentials: 'include'})\r\n            .then(res => res.json())\r\n            .then((result) => {\r\n                this.setState({\r\n                    comment: result,\r\n                    showComment: true,\r\n                });\r\n                console.log(result)\r\n                console.log(sessionStorage.getItem('userId'))\r\n            },\r\n            (error) => {\r\n                console.log(error)\r\n            });\r\n    };\r\n    lastPage(){\r\n        this.getCommentList(this.state.page - 1);\r\n        this.setState({page: this.state.page - 1});\r\n    };\r\n    nextPage(){\r\n        this.getCommentList(this.state.page + 1);\r\n        this.setState({page: this.state.page + 1});\r\n    };\r\n    handleChange(event){\r\n        switch (event.target.id) {\r\n            case \"content\":\r\n                this.setState({\r\n                    newComment: event.target.value\r\n                });\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n    addComment(){\r\n        console.log(sessionStorage.getItem('userId'))\r\n        let requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n                eventId: this.props.currentEvent.event_id,\r\n                content: this.state.newComment,\r\n                date: new Date(),\r\n                }),\r\n            credentials: 'include'\r\n        };\r\n        //console.log(requestOptions)\r\n        fetch(`/api/comments`, requestOptions)\r\n            .then(res => res.json())\r\n            .then(result => {\r\n                //console.log(result)\r\n                this.setState({newComment: ''})\r\n                this.getCommentList(1);\r\n            });\r\n    };\r\n    deleteComment(commentId){\r\n        console.log(commentId);\r\n        //console.log(requestOptions)\r\n        fetch(`/api/comments/${commentId}`, {method: 'DELETE', credentials: 'include'})\r\n            .then(res => res.json())\r\n            .then(result => {\r\n                //console.log(result)\r\n                this.getCommentList(1);\r\n            });\r\n    };\r\n    likeEvent(){\r\n        \r\n    }\r\n    render(){\r\n        if(sessionStorage.getItem('LoginStatus') === 'false'){\r\n            return <Redirect to='/login' />\r\n        }else{\r\n            return(\r\n                <>\r\n                <div className=\"card-body\">\r\n                    <h3 className=\"card-title\">{this.props.currentEvent.event_summary}</h3>\r\n                    <button className=\"btn btn-danger m-2 float-right\" onClick={this.likeEvent}>Like</button>\r\n                    <p className=\"card-text\">Organizer: {this.props.currentEvent.event_org}</p>\r\n                    <p className=\"card-text\">Location: {this.props.currentEvent.event_location}</p>\r\n                    <p className=\"card-text small\">Date: {this.props.currentEvent.event_date}</p>\r\n                    <div>\r\n                        <ul className=\"list-group my-2\">\r\n                            {this.state.comment.map((comment, index) => (\r\n                                <li className=\"list-group-item\" key={index}>\r\n                                    <div className=\"media\">\r\n                                        <div className=\"media-body\">\r\n                                            <p>{comment.content}</p>\r\n                                            <small className=\"text-muted font-italic\">\r\n                                                <p>Name: {comment.userName} Date: {comment.date} {comment.userId === sessionStorage.getItem('userId') - 0 ? <button className=\"btn btn-sm btn-danger float-right\" onClick={this.deleteComment.bind(this, comment.commentId)}>Delete</button> : ''}</p>\r\n                                            </small>\r\n                                        </div>\r\n                                    </div>\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                        <nav className=\"container my-2\">\r\n                            <button className=\"btn btn-primary\" disabled={this.state.page === 1} onClick={this.lastPage}>&laquo;</button>\r\n                            <button className=\"btn btn-primary float-right\" disabled={this.state.comment.length < 5} onClick={this.nextPage}>&raquo;</button>\r\n                        </nav>\r\n                    </div>\r\n                    <form>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"content\">Your comment</label>\r\n                            <textarea type=\"text\" name=\"content\" id=\"content\" className=\"form-control\" placeholder=\"\" rows=\"3\" value={this.state.newComment} onChange={this.handleChange}></textarea>\r\n                        </div>\r\n                        <button type=\"button\" className=\"btn btn-primary\" onClick={this.addComment}>Add comment</button>\r\n                    </form>\r\n                </div>\r\n                </>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Event;","import React from 'react'\r\nimport Event from './Event'\r\nimport { withRouter, Redirect } from 'react-router-dom'\r\n\r\n\r\nclass Main extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            selected: 0,\r\n            data: [],\r\n            currentEvent: {},\r\n            page: 1,\r\n            sortType: 'event_summary',\r\n            sortMode: '',\r\n            searchQuery: '',\r\n            searchField: 'event_summary',\r\n            focusEdit: false,\r\n            flushing: false,\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.getEventList = this.getEventList.bind(this);\r\n        this.doSearch = this.doSearch.bind(this);\r\n        this.nextPage = this.nextPage.bind(this);\r\n        this.lastPage = this.lastPage.bind(this);\r\n        this.lastEvent = this.lastEvent.bind(this);\r\n        this.closeEventInfo = this.closeEventInfo.bind(this);\r\n        this.nextEvent = this.nextEvent.bind(this);\r\n        this.deleteEvent = this.deleteEvent.bind(this);\r\n        this.openEditForm = this.openEditForm.bind(this);\r\n        this.submitEvent = this.submitEvent.bind(this);\r\n        this.flushData = this.flushData.bind(this);\r\n    };\r\n    parse(url){\r\n        let params = url.split('/');\r\n        return {\r\n            page: params[3] - 0 || 1,\r\n            sortMode: params[5] ? (params[5][0] === '-' ? '-' : '') : '',\r\n            sortType: params[5] ? (params[5][0] === '-' ? params[5].slice(1) : params[5]) : 'event_summary',\r\n            searchField: params[7] ? params[7].split('::')[0] : 'event_summary',\r\n            searchQuery: params[7] ? (params[7].split('::')[1] || '') : '',\r\n            selected: params[8] - 0 || 0,\r\n        }\r\n    };\r\n    async componentDidMount(){\r\n        let state = this.parse(this.props.history.location.pathname)\r\n        console.log(state)\r\n        this.setState(state)\r\n        await this.getEventList(state.page, state.sortType, state.sortMode, state.searchField, state.searchQuery);\r\n        this.openEventInfo(state.selected)\r\n    };\r\n    async componentDidUpdate(){\r\n        let state = this.parse(this.props.history.location.pathname)\r\n        if(state.page !== this.state.page ||\r\n            state.sortType !== this.state.sortType ||\r\n            state.sortMode !== this.state.sortMode ||\r\n            state.searchQuery !== this.state.searchQuery ||\r\n            state.searchField !== this.state.searchField){\r\n            console.log(state, this.state)\r\n            await this.getEventList(state.page, state.sortType, state.sortMode, state.searchField, state.searchQuery)\r\n        }\r\n        if(state.selected !== this.state.selected){\r\n            this.openEventInfo(state.selected)\r\n        }\r\n    }\r\n    async getEventList(page=this.state.page, sortType=this.state.sortType, sortMode=this.state.sortMode, searchField=this.state.searchField, searchQuery=this.state.searchQuery){\r\n        console.log('alist')\r\n        let path = `/event/page/${page}/sortBy/${sortMode}${sortType}/keyword/${searchField}::${searchQuery}`;\r\n        if(this.props.history.location.pathname !== path){\r\n            this.props.history.location.pathname = path;\r\n            window.history.pushState({},'state', path);\r\n        }\r\n        window.scrollTo(0, 0)\r\n        await fetch(`/api/events/page/${page}/sortBy/${sortMode}${sortType}/keyword/${searchField}::${searchQuery}`, {credentials: 'include'})\r\n            .then(res => res.json())\r\n            .then((result) => {\r\n                console.log(result)\r\n                if(result.err){\r\n                    sessionStorage.setItem('LoginStatus', false);\r\n                    this.forceUpdate();\r\n                }\r\n                this.setState({\r\n                    page: page,\r\n                    sortType: sortType,\r\n                    sortMode: sortMode,\r\n                    data: result,\r\n                });\r\n            },\r\n            (error) => {\r\n                console.log(error)\r\n            });\r\n    };\r\n    openEventInfo(index, e){\r\n        if(index !== 0 ){\r\n            console.log('event')\r\n            let path = `/event/page/${this.state.page}/sortBy/${this.state.sortMode}${this.state.sortType}/keyword/${this.state.searchField}::${this.state.searchQuery}/${index}`;\r\n            if(this.props.history.location.pathname !== path){\r\n                this.props.history.location.pathname = path;\r\n                window.history.pushState({},'state', path);\r\n            }\r\n            this.setState({\r\n                selected: index,\r\n                currentEvent: this.state.data[index - 1],\r\n            });\r\n        }else{\r\n            this.setState({\r\n                selected: 0,\r\n                currentEvent: {\r\n                    event_summary: '',\r\n                    event_org: '',\r\n                    event_date: '',\r\n                    event_location: '',\r\n                    event_id: -1,\r\n                }\r\n            })\r\n            let path = `/event/page/${this.state.page}/sortBy/${this.state.sortMode}${this.state.sortType}/keyword/${this.state.searchField}::${this.state.searchQuery}`;\r\n            this.props.history.location.pathname = path;\r\n            window.history.pushState({},'state',path);\r\n        }\r\n    };\r\n    lastEvent(){\r\n        this.openEventInfo(this.state.selected - 1, {})\r\n    };\r\n    closeEventInfo(){\r\n        this.openEventInfo(0, {})\r\n    };\r\n    nextEvent(){\r\n        this.openEventInfo(this.state.selected + 1, {})\r\n    };\r\n    lastPage(){\r\n        this.getEventList(this.state.page - 1)\r\n    };\r\n    nextPage(){\r\n        this.getEventList(this.state.page + 1)\r\n    };\r\n    handleChange(event){\r\n        switch (event.target.id) {\r\n            case \"sortType\":\r\n                this.getEventList(1, event.target.value)\r\n                break;\r\n            case \"sortMode\":\r\n                this.getEventList(1, this.state.sortType, event.target.value)\r\n                break;\r\n            case \"searchField\":\r\n                this.setState({searchField: event.target.value});\r\n                break;\r\n            case \"searchQuery\":\r\n                this.setState({searchQuery: event.target.value});\r\n                break;\r\n            case \"summary\":\r\n                this.setState({\r\n                    currentEvent: {\r\n                        event_summary: event.target.value,\r\n                        event_org: this.state.currentEvent.event_org,\r\n                        event_date: this.state.currentEvent.event_date,\r\n                        event_location: this.state.currentEvent.event_location,\r\n                        event_id: this.state.currentEvent.event_id,\r\n                    }\r\n                });\r\n                break;\r\n            case \"date\":\r\n                this.setState({\r\n                    currentEvent: {\r\n                        event_summary: this.state.currentEvent.event_summary,\r\n                        event_org: this.state.currentEvent.event_org,\r\n                        event_date: event.target.value,\r\n                        event_location: this.state.currentEvent.event_location,\r\n                        event_id: this.state.currentEvent.event_id,\r\n                    }\r\n                });\r\n                break;\r\n            case \"org\":\r\n                this.setState({\r\n                    currentEvent: {\r\n                        event_summary: this.state.currentEvent.event_summary,\r\n                        event_org: event.target.value,\r\n                        event_date: this.state.currentEvent.event_date,\r\n                        event_location: this.state.currentEvent.event_location,\r\n                        event_id: this.state.currentEvent.event_id,\r\n                    }\r\n                });\r\n                break;\r\n            case \"loc\":\r\n                this.setState({\r\n                    currentEvent: {\r\n                        event_summary: this.state.currentEvent.event_summary,\r\n                        event_org: this.state.currentEvent.event_org,\r\n                        event_date: this.state.currentEvent.event_date,\r\n                        event_location: event.target.value,\r\n                        event_id: this.state.currentEvent.event_id,\r\n                    }\r\n                });\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n    doSearch(event){\r\n        event.preventDefault();\r\n        this.getEventList(1);\r\n        this.closeEventInfo();\r\n    };\r\n    deleteEvent(index, e){\r\n        let currentEvent = this.state.data[index]\r\n        let eventId = currentEvent.event_id;\r\n        console.log(eventId);\r\n        //console.log(requestOptions)\r\n        fetch(`/api/event/${eventId}`, {method: 'DELETE', credentials: 'include' })\r\n            .then(res => res.json())\r\n            .then(result => {\r\n                //console.log(result)\r\n                this.getEventList(1);\r\n            });\r\n    };\r\n    openEditForm(index, e){\r\n        if(typeof index == 'number'){\r\n            this.setState({currentEvent: this.state.data[index]})\r\n            this.setState({focusEdit: 'Edit'})\r\n        }else{\r\n            this.setState({\r\n                currentEvent: {\r\n                    event_summary: '',\r\n                    event_org: '',\r\n                    event_date: '',\r\n                    event_location: '',\r\n                    event_id: -1,\r\n                }\r\n            })\r\n            this.setState({focusEdit: 'New'})\r\n        }\r\n    };\r\n    submitEvent(){\r\n        let method = '';\r\n        if(this.state.focusEdit === 'New'){\r\n            method = 'POST';\r\n        }else if(this.state.focusEdit === 'Edit'){\r\n            method = 'PUT'\r\n        }\r\n        let requestOptions = {\r\n            method: method,\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(this.state.currentEvent),\r\n            credentials: 'include' \r\n        };\r\n        console.log(requestOptions)\r\n        fetch(`/api/event`, requestOptions)\r\n            .then(res => res.json())\r\n            .then(result => {\r\n                //console.log(result)\r\n                this.getEventList(1);\r\n            });\r\n    };\r\n    async flushData(){\r\n        this.setState({flushing: true})\r\n        await fetch(`/api/event`, {credentials: 'include' })\r\n            .then(res => res.json())\r\n            .then(result => {\r\n                //console.log(result)\r\n        });\r\n        await this.getEventList(1);\r\n        this.setState({flushing: false})\r\n    };\r\n    render(){\r\n        if(sessionStorage.getItem('LoginStatus') === 'false'){\r\n            return <Redirect to='/login' />\r\n        }else{\r\n            return(\r\n                <div>\r\n                    <nav className=\"navbar navbar-light navbar-expand bg-light\">\r\n                        <form className=\"form-inline input-group mr-2\" onSubmit={this.doSearch}>\r\n                            <div className=\"input-group-prepend mr-2\">\r\n                                <select id=\"searchField\" className=\"form-control\" onChange={this.handleChange} value={this.state.searchField}>\r\n                                    <option value=\"event_summary\">Summary</option>\r\n                                    <option value=\"event_date\">Date</option>\r\n                                    <option value=\"event_org\">Organizer</option>\r\n                                    <option value=\"event_location\">Location</option>\r\n                                </select>\r\n                            </div>\r\n                            <input id=\"searchQuery\" className=\"form-control rounded-left\" type=\"text\" placeholder=\"Search\" value={this.state.searchQuery} onChange={this.handleChange} />\r\n                            <div className=\"input-group-append\">\r\n                                <button className=\"btn btn-outline-success\" type=\"button\" onClick={this.doSearch}>Search</button>\r\n                            </div>\r\n                        </form>\r\n                    </nav>\r\n                    <div style={{display: this.state.selected === 0 ? 'block' : 'none'}}>\r\n                        <nav className=\"navbar navbar-light navbar-expand bg-light justify-content-end\">\r\n                            <span className=\"small mr-2\">Sort By</span>\r\n                            <ul className=\"navbar-nav mr-2\">\r\n                                <li className=\"nav-item mr-2\">\r\n                                    <select id=\"sortType\" className=\"form-control-sm\" onChange={this.handleChange} value={this.state.sortType}>\r\n                                        <option value=\"event_summary\">Summary</option>\r\n                                        <option value=\"event_date\">Date</option>\r\n                                        <option value=\"event_org\">Organizer</option>\r\n                                        <option value=\"event_location\">Location</option>\r\n                                    </select>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <select id=\"sortMode\" className=\"form-control-sm\" onChange={this.handleChange} value={this.state.sortMode}>\r\n                                        <option value=\"-\">Dsc</option>\r\n                                        <option value=\"\">Asc</option>\r\n                                    </select>\r\n                                </li>\r\n                            </ul>\r\n                            <button className=\"btn btn-primary mr-2\" onClick={this.openEditForm} data-toggle=\"modal\" data-target=\"#openEditFormForm\">New Event</button>\r\n                            <button className=\"btn btn-success\" onClick={this.flushData} disabled={this.state.flushing}>{this.state.flushing? <span className=\"spinner-border spinner-border-sm\"></span> : ''} Flush Data</button>\r\n                        </nav>              \r\n                        <ul className=\"list-group my-2\">\r\n                            {this.state.data.map((event, index) => (\r\n                                <li className=\"list-group-item\" key={index} id={index}>\r\n                                    <div className=\"card-body\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-10\">\r\n                                                <button className=\"btn btn-lg btn-outline-dark\" onClick={(e) => this.openEventInfo(index + 1, e)}>{event.event_summary}</button>\r\n                                                <p className=\"card-text\">Organizer: {event.event_org}</p>\r\n                                                <p className=\"card-text\">Location: {event.event_location}</p>\r\n                                                <p className=\"card-text small\">Date: {event.event_date}</p>\r\n                                            </div>\r\n                                            <div className=\"col-2\">\r\n                                                <button className=\"btn btn-info m-2\" onClick={(e) => this.openEditForm(index, e)} data-toggle=\"modal\" data-target=\"#openEditFormForm\">Edit</button>\r\n                                                <br/>\r\n                                                <button className=\"btn btn-danger m-2\" onClick={(e) => this.deleteEvent(index, e)}>Delete</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                        <nav className=\"container my-2\">\r\n                            <button className=\"btn btn-primary\" disabled={this.state.page === 1} onClick={this.lastPage}>&laquo;</button>\r\n                            <button className=\"btn btn-primary float-right\" disabled={this.state.data.length < 10} onClick={this.nextPage}>&raquo;</button>\r\n                        </nav>\r\n                    </div>\r\n                    <div style={{display: this.state.selected === 0 ? 'none' : 'block', height: '100vh'}} >\r\n                        <div className=\"row h-100 bg-secondary\">\r\n                            <div className=\"col-2 align-self-center text-center\">\r\n                                <button className=\"btn\" disabled={this.state.selected === 1} onClick={this.lastEvent}>\r\n                                    <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 24 24\">\r\n                                        <path d=\"M7.41,15.41L12,10.83L16.59,15.41L18,14L12,8L6,14L7.41,15.41Z\"></path>\r\n                                    </svg>\r\n                                </button>\r\n                                <button className=\"btn\" onClick={this.closeEventInfo}>\r\n                                    <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 24 24\">\r\n                                        <path d=\"M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z\"></path>\r\n                                    </svg>\r\n                                </button>\r\n                                <button className=\"btn\" disabled={this.state.selected === 10} onClick={this.nextEvent}>\r\n                                    <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 24 24\">\r\n                                        <path d=\"M7.41,8.58L12,13.17L16.59,8.58L18,10L12,16L6,10L7.41,8.58Z\"></path>\r\n                                    </svg>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"col-10 bg-light\">\r\n                                <Event currentEvent={this.state.currentEvent} userId={this.props.userId}></Event>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"modal fade\" role=\"dialog\" id=\"openEditFormForm\">\r\n                        <div className=\"modal-dialog\" role=\"document\">\r\n                            <div className=\"modal-content\">\r\n                                <div className=\"modal-header\">\r\n                                    <h5 className=\"modal-title\">{`${this.state.focusEdit} Event`}</h5>\r\n                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                    <span aria-hidden=\"true\">&times;</span>\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"modal-body\">\r\n                                    <form>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"summary\">Summary</label>\r\n                                            <textarea type=\"text\" name=\"summary\" id=\"summary\" className=\"form-control\" placeholder=\"Summary\" rows=\"2\" value={this.state.currentEvent.event_summary} onChange={this.handleChange}></textarea>\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"org\">Organizer</label>\r\n                                            <textarea type=\"text\" name=\"org\" id=\"org\" className=\"form-control\" placeholder=\"Organizer\" rows=\"2\" value={this.state.currentEvent.event_org} onChange={this.handleChange}></textarea>\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"date\">Date</label>\r\n                                            <textarea type=\"text\" name=\"date\" id=\"date\" className=\"form-control\" placeholder=\"15 July 2020\" rows=\"2\" value={this.state.currentEvent.event_date} onChange={this.handleChange}></textarea>\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"loc\">Location</label>\r\n                                            <textarea type=\"text\" name=\"loc\" id=\"loc\" className=\"form-control\" placeholder=\"Location\" rows=\"2\" value={this.state.currentEvent.event_location} onChange={this.handleChange}></textarea>\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button type=\"button\" className=\"btn btn-primary\" onClick={this.submitEvent} data-dismiss=\"modal\">Save changes</button>\r\n                                    <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>)\r\n            };\r\n        }\r\n}\r\n\r\n\r\nexport default withRouter(Main);","import React from 'react';\r\nimport NavBar from './NavBar';\r\nimport Main from './Main';\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass Header extends React.Component{\r\n  render(){\r\n      return(\r\n        <header className=\"App-header\">\r\n          <NavBar></NavBar>\r\n        </header>\r\n      )\r\n  }\r\n}\r\n\r\n\r\nclass App extends React.Component{\r\n  render(){\r\n    if(sessionStorage.getItem('LoginStatus') === 'true'){\r\n      return (\r\n        <div className=\"App\">\r\n          <Header/>\r\n          <Main userId={1}/>\r\n        </div>\r\n      )\r\n    }else{\r\n      return <Redirect to ='/Login'/>\r\n    }\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass Login extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n        };\r\n        this.login = this.login.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    };\r\n    login(){\r\n        if(this.state.email && this.state.password){\r\n            let requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    email: this.state.email,\r\n                    password: btoa(this.state.password),\r\n                    }),\r\n                credentials: 'include'\r\n            };\r\n            fetch(`/index/login`, requestOptions)\r\n                .then(res => res.json())\r\n                .then(result=>{\r\n                    console.log(result);\r\n                    if(result.msg === \"fail\"){\r\n                        alert('Incorrect email or pswd!')\r\n                    }else{\r\n                        sessionStorage.setItem('LoginStatus', result.loginStatus);\r\n                        sessionStorage.setItem('userName', result.userName);\r\n                        sessionStorage.setItem('userId', result.userId);\r\n                        sessionStorage.getItem('userId')\r\n                    }\r\n                    this.forceUpdate()\r\n                })\r\n        }else{\r\n            alert('Enter email & pswd!')\r\n        }\r\n    };\r\n    handleChange(event){\r\n        switch (event.target.id) {\r\n            case \"email\":\r\n                this.setState({\r\n                    email: event.target.value\r\n                });\r\n                break;\r\n            case \"password\":\r\n                this.setState({\r\n                    password: event.target.value\r\n                })\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n    render(){\r\n        if(sessionStorage.getItem('LoginStatus') === 'true'){\r\n            return <Redirect to='/event'/>\r\n        }else{\r\n            return (\r\n            <div className=\"container\">\r\n                <form>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" name=\"email\" id=\"email\" className=\"form-control\" placeholder=\"\" value={this.state.email} onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" name=\"password\" id=\"password\" className=\"form-control\" placeholder=\"\" value={this.state.password} onChange={this.handleChange} />\r\n                    </div>\r\n                    <button type=\"button\" className=\"btn btn-primary\" onClick={this.login}>Login</button>\r\n                </form>\r\n            </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App.jsx';\r\nimport Login from './components/Login.jsx';\r\nimport {Route, BrowserRouter as Router, Redirect} from 'react-router-dom';\r\n\r\nsessionStorage.setItem('LoginStatus', false)\r\n\r\nclass Index extends React.Component{\r\n  render(){\r\n    if(sessionStorage.getItem('LoginStatus') === true){\r\n      return <Redirect to='/event'/>\r\n    }else{\r\n      return <Redirect to='/login' />\r\n    }\r\n  }\r\n}\r\n\r\nReactDOM.render(\r\n  <Router>\r\n      <Route path=\"/\" component={Index}/>\r\n      <Route path=\"/login\" component={Login}/>\r\n      <Route path=\"/event\" component={App}/>\r\n  </Router>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}