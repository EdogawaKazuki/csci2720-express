{"version":3,"sources":["components/NavBar.jsx","config.js","components/Event.jsx","components/Main.jsx","components/App.jsx","components/Login.jsx","index.js"],"names":["NavBar","props","state","username","sessionStorage","getItem","logOut","bind","fetch","credentials","then","res","json","result","setItem","console","log","forceUpdate","to","className","this","type","onClick","React","Component","Event","page","comment","currentEvent","showComment","newComment","handleChange","getCommentList","nextPage","lastPage","addComment","deleteComment","likeEvent","length","setState","event_id","error","event","target","id","value","requestOptions","method","headers","body","JSON","stringify","eventId","content","date","Date","commentId","alert","msg","event_summary","event_org","event_location","event_date","map","index","key","userName","userId","disabled","htmlFor","name","placeholder","rows","onChange","Main","selected","favorite","data","list","sortType","sortMode","searchQuery","searchField","focusEdit","flushing","getEventList","doSearch","lastEvent","closeEventInfo","nextEvent","deleteEvent","openEditForm","submitEvent","flushData","showFavorite","url","params","split","slice","parse","history","location","pathname","openEventInfo","path","window","pushState","scrollTo","err","e","preventDefault","onSubmit","style","display","data-toggle","data-target","height","width","viewBox","d","deleteFavorite","closeFavorite","role","data-dismiss","aria-label","aria-hidden","withRouter","Header","App","Login","email","password","login","btoa","loginStatus","Index","ReactDOM","render","component","document","getElementById"],"mappings":"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","file":"static/js/main.7493bcfe.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Redirect } from 'react-router-dom'\r\nimport APIHost from '../config'\r\n\r\nclass NavBar extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      username: sessionStorage.getItem('userName')\r\n    };\r\n    this.logOut = this.logOut.bind(this)\r\n  };\r\n  logOut(){\r\n    fetch(`${APIHost}/index/logout`, {credentials: 'include' })\r\n        .then(res => res.json())\r\n        .then(result=>{\r\n            sessionStorage.setItem('LoginStatus', false)\r\n            console.log(result)\r\n            this.forceUpdate()\r\n        })\r\n  };\r\n  render(){\r\n    if(sessionStorage.getItem('LoginStatus') === 'false'){\r\n        return <Redirect to='/login' />\r\n    }else{\r\n      return(\r\n        <nav className=\"navbar navbar-light bg-light justify-content-end\">\r\n          <div>\r\n            <span className=\"navbar-text\">\r\n              {this.state.username}\r\n            </span>\r\n            <button className=\"btn btn-danger ml-2 my-2 my-sm-0\" type=\"button\" onClick={this.logOut}>Logout</button>\r\n          </div>\r\n        </nav>\r\n      )\r\n    }\r\n  };\r\n}\r\n\r\nexport default NavBar;\r\n","var APIHost = '';\r\nexport default APIHost","import React from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport APIHost from '../config'\r\n\r\n\r\nclass Event extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            page: 1,\r\n            comment: [],\r\n            currentEvent: this.props.currentEvent,\r\n            showComment: true,\r\n            newComment: '',\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.getCommentList = this.getCommentList.bind(this);\r\n        this.nextPage = this.nextPage.bind(this);\r\n        this.lastPage = this.lastPage.bind(this);\r\n        this.addComment = this.addComment.bind(this);\r\n        this.deleteComment = this.deleteComment.bind(this);\r\n        this.likeEvent = this.likeEvent.bind(this);\r\n    };\r\n    componentDidMount(){\r\n        if(this.props.currentEvent.length){\r\n            this.setState({\r\n                currentEvent: this.props.currentEvent\r\n            });\r\n            this.getCommentList(this.state.page);\r\n        }\r\n    };\r\n    componentDidUpdate(){\r\n        if(this.state.currentEvent !== this.props.currentEvent){\r\n            this.setState({\r\n                currentEvent: this.props.currentEvent,\r\n                page: 1,\r\n            })\r\n            this.getCommentList(1)\r\n        }\r\n    }\r\n    getCommentList(page){\r\n        fetch(`${APIHost}/api/comments/eventId/${this.props.currentEvent.event_id}/page/${page}`, {credentials: 'include'})\r\n            .then(res => res.json())\r\n            .then((result) => {\r\n                this.setState({\r\n                    comment: result,\r\n                    showComment: true,\r\n                });\r\n                console.log(result)\r\n                console.log(sessionStorage.getItem('userId'))\r\n            },\r\n            (error) => {\r\n                console.log(error)\r\n            });\r\n    };\r\n    lastPage(){\r\n        this.getCommentList(this.state.page - 1);\r\n        this.setState({page: this.state.page - 1});\r\n    };\r\n    nextPage(){\r\n        this.getCommentList(this.state.page + 1);\r\n        this.setState({page: this.state.page + 1});\r\n    };\r\n    handleChange(event){\r\n        switch (event.target.id) {\r\n            case \"content\":\r\n                this.setState({\r\n                    newComment: event.target.value\r\n                });\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n    addComment(){\r\n        console.log(sessionStorage.getItem('userId'))\r\n        let requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n                eventId: this.props.currentEvent.event_id,\r\n                content: this.state.newComment,\r\n                date: new Date(),\r\n                }),\r\n            credentials: 'include'\r\n        };\r\n        //console.log(requestOptions)\r\n        fetch(`${APIHost}/api/comments`, requestOptions)\r\n            .then(res => res.json())\r\n            .then(result => {\r\n                //console.log(result)\r\n                this.setState({newComment: ''})\r\n                this.getCommentList(1);\r\n            });\r\n    };\r\n    deleteComment(commentId){\r\n        console.log(commentId);\r\n        //console.log(requestOptions)\r\n        fetch(`${APIHost}/api/comments/${commentId}`, {method: 'DELETE', credentials: 'include'})\r\n            .then(res => res.json())\r\n            .then(result => {\r\n                //console.log(result)\r\n                this.getCommentList(1);\r\n            });\r\n    };\r\n    likeEvent(){\r\n        let requestOptions={\r\n            method: \"POST\",\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({eventId: this.props.currentEvent.event_id}),\r\n            credentials: 'include'\r\n        }\r\n        fetch(`${APIHost}/api/favorite`,requestOptions)\r\n            .then(res=>res.json())\r\n            .then(result=>{\r\n                console.log(result);\r\n                alert(result.msg);\r\n            })\r\n    }\r\n    render(){\r\n        if(sessionStorage.getItem('LoginStatus') === 'false'){\r\n            return <Redirect to='/login' />\r\n        }else{\r\n            return(\r\n                <>\r\n                <div className=\"card-body\">\r\n                    <h3 className=\"card-title\">{this.props.currentEvent.event_summary}</h3>\r\n                    <button className=\"btn btn-danger m-2 float-right\" onClick={this.likeEvent}>Like</button>\r\n                    <p className=\"card-text\">Organizer: {this.props.currentEvent.event_org}</p>\r\n                    <p className=\"card-text\">Location: {this.props.currentEvent.event_location}</p>\r\n                    <p className=\"card-text small\">Date: {this.props.currentEvent.event_date}</p>\r\n                    <div>\r\n                        <ul className=\"list-group my-2\">\r\n                            {this.state.comment.map((comment, index) => (\r\n                                <li className=\"list-group-item\" key={index}>\r\n                                    <div className=\"media\">\r\n                                        <div className=\"media-body\">\r\n                                            <p>{comment.content}</p>\r\n                                            <small className=\"text-muted font-italic\">\r\n                                                <p>Name: {comment.userName} Date: {comment.date} {comment.userId === sessionStorage.getItem('userId') - 0 ? <button className=\"btn btn-sm btn-danger float-right\" onClick={this.deleteComment.bind(this, comment.commentId)}>Delete</button> : ''}</p>\r\n                                            </small>\r\n                                        </div>\r\n                                    </div>\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                        <nav className=\"container my-2\">\r\n                            <button className=\"btn btn-primary\" disabled={this.state.page === 1} onClick={this.lastPage}>&laquo;</button>\r\n                            <button className=\"btn btn-primary float-right\" disabled={this.state.comment.length < 5} onClick={this.nextPage}>&raquo;</button>\r\n                        </nav>\r\n                    </div>\r\n                    <form>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"content\">Your comment</label>\r\n                            <textarea type=\"text\" name=\"content\" id=\"content\" className=\"form-control\" placeholder=\"\" rows=\"3\" value={this.state.newComment} onChange={this.handleChange}></textarea>\r\n                        </div>\r\n                        <button type=\"button\" className=\"btn btn-primary\" onClick={this.addComment}>Add comment</button>\r\n                    </form>\r\n                </div>\r\n                </>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Event;","import React from 'react'\r\nimport Event from './Event'\r\nimport { withRouter, Redirect } from 'react-router-dom'\r\nimport APIHost from '../config'\r\n\r\nclass Main extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            selected: 0,\r\n            favorite: 0,\r\n            data: [],\r\n            list:[],\r\n            currentEvent: {},\r\n            page: 1,\r\n            sortType: 'event_summary',\r\n            sortMode: '',\r\n            searchQuery: '',\r\n            searchField: 'event_summary',\r\n            focusEdit: false,\r\n            flushing: false,\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.getEventList = this.getEventList.bind(this);\r\n        this.doSearch = this.doSearch.bind(this);\r\n        this.nextPage = this.nextPage.bind(this);\r\n        this.lastPage = this.lastPage.bind(this);\r\n        this.lastEvent = this.lastEvent.bind(this);\r\n        this.closeEventInfo = this.closeEventInfo.bind(this);\r\n        this.nextEvent = this.nextEvent.bind(this);\r\n        this.deleteEvent = this.deleteEvent.bind(this);\r\n        this.openEditForm = this.openEditForm.bind(this);\r\n        this.submitEvent = this.submitEvent.bind(this);\r\n        this.flushData = this.flushData.bind(this);\r\n        this.showFavorite = this.showFavorite.bind(this);\r\n    };\r\n    parse(url){\r\n        let params = url.split('/');\r\n        return {\r\n            page: params[3] - 0 || 1,\r\n            sortMode: params[5] ? (params[5][0] === '-' ? '-' : '') : '',\r\n            sortType: params[5] ? (params[5][0] === '-' ? params[5].slice(1) : params[5]) : 'event_summary',\r\n            searchField: params[7] ? params[7].split('::')[0] : 'event_summary',\r\n            searchQuery: params[7] ? (params[7].split('::')[1] || '') : '',\r\n            selected: params[8] - 0 || 0,\r\n        }\r\n    };\r\n    async componentDidMount(){\r\n        let state = this.parse(this.props.history.location.pathname)\r\n        console.log(state)\r\n        this.setState(state)\r\n        await this.getEventList(state.page, state.sortType, state.sortMode, state.searchField, state.searchQuery);\r\n        this.openEventInfo(state.selected)\r\n    };\r\n    async componentDidUpdate(){\r\n        let state = this.parse(this.props.history.location.pathname)\r\n        if(state.page !== this.state.page ||\r\n            state.sortType !== this.state.sortType ||\r\n            state.sortMode !== this.state.sortMode ||\r\n            state.searchQuery !== this.state.searchQuery ||\r\n            state.searchField !== this.state.searchField){\r\n            console.log(state, this.state)\r\n            await this.getEventList(state.page, state.sortType, state.sortMode, state.searchField, state.searchQuery)\r\n        }\r\n        if(state.selected !== this.state.selected){\r\n            this.openEventInfo(state.selected)\r\n        }\r\n    }\r\n    async getEventList(page=this.state.page, sortType=this.state.sortType, sortMode=this.state.sortMode, searchField=this.state.searchField, searchQuery=this.state.searchQuery){\r\n        console.log('alist')\r\n        let path = `/event/page/${page}/sortBy/${sortMode}${sortType}/keyword/${searchField}::${searchQuery}`;\r\n        if(this.props.history.location.pathname !== path){\r\n            this.props.history.location.pathname = path;\r\n            window.history.pushState({},'state', path);\r\n        }\r\n        window.scrollTo(0, 0)\r\n        await fetch(`${APIHost}/api/events/page/${page}/sortBy/${sortMode}${sortType}/keyword/${searchField}::${searchQuery}`, {credentials: 'include'})\r\n            .then(res => res.json())\r\n            .then((result) => {\r\n                console.log(result)\r\n                if(result.err){\r\n                    sessionStorage.setItem('LoginStatus', false);\r\n                    this.forceUpdate();\r\n                }\r\n                this.setState({\r\n                    page: page,\r\n                    sortType: sortType,\r\n                    sortMode: sortMode,\r\n                    data: result,\r\n                    searchField: searchField,\r\n                    searchQuery: searchQuery\r\n                });\r\n            },\r\n            (error) => {\r\n                console.log(error)\r\n            });\r\n    };\r\n    openEventInfo(index, e){\r\n        if(index !== 0 ){\r\n            console.log('event')\r\n            let path = `/event/page/${this.state.page}/sortBy/${this.state.sortMode}${this.state.sortType}/keyword/${this.state.searchField}::${this.state.searchQuery}/${index}`;\r\n            if(this.props.history.location.pathname !== path){\r\n                this.props.history.location.pathname = path;\r\n                window.history.pushState({},'state', path);\r\n            }\r\n            this.setState({\r\n                selected: index,\r\n                currentEvent: this.state.data[index - 1],\r\n            });\r\n        }else{\r\n            this.setState({\r\n                selected: 0,\r\n                currentEvent: {\r\n                    event_summary: '',\r\n                    event_org: '',\r\n                    event_date: '',\r\n                    event_location: '',\r\n                    event_id: -1,\r\n                }\r\n            })\r\n            let path = `/event/page/${this.state.page}/sortBy/${this.state.sortMode}${this.state.sortType}/keyword/${this.state.searchField}::${this.state.searchQuery}`;\r\n            this.props.history.location.pathname = path;\r\n            window.history.pushState({},'state',path);\r\n        }\r\n    };\r\n    lastEvent(){\r\n        this.openEventInfo(this.state.selected - 1, {})\r\n    };\r\n    closeEventInfo(){\r\n        this.openEventInfo(0, {})\r\n    };\r\n    nextEvent(){\r\n        this.openEventInfo(this.state.selected + 1, {})\r\n    };\r\n    lastPage(){\r\n        this.getEventList(this.state.page - 1)\r\n    };\r\n    nextPage(){\r\n        this.getEventList(this.state.page + 1)\r\n    };\r\n    handleChange(event){\r\n        switch (event.target.id) {\r\n            case \"sortType\":\r\n                this.getEventList(1, event.target.value)\r\n                break;\r\n            case \"sortMode\":\r\n                this.getEventList(1, this.state.sortType, event.target.value)\r\n                break;\r\n            case \"searchField\":\r\n                this.getEventList(1, this.state.sortType, this.state.sortMode, event.target.value)\r\n                //this.setState({searchField: event.target.value});\r\n                break;\r\n            case \"searchQuery\":\r\n                this.getEventList(1, this.state.sortType, this.state.sortMode, this.state.searchField, event.target.value)\r\n                //this.setState({searchQuery: event.target.value});\r\n                break;\r\n            case \"summary\":\r\n                this.setState({\r\n                    currentEvent: {\r\n                        event_summary: event.target.value,\r\n                        event_org: this.state.currentEvent.event_org,\r\n                        event_date: this.state.currentEvent.event_date,\r\n                        event_location: this.state.currentEvent.event_location,\r\n                        event_id: this.state.currentEvent.event_id,\r\n                    }\r\n                });\r\n                break;\r\n            case \"date\":\r\n                this.setState({\r\n                    currentEvent: {\r\n                        event_summary: this.state.currentEvent.event_summary,\r\n                        event_org: this.state.currentEvent.event_org,\r\n                        event_date: event.target.value,\r\n                        event_location: this.state.currentEvent.event_location,\r\n                        event_id: this.state.currentEvent.event_id,\r\n                    }\r\n                });\r\n                break;\r\n            case \"org\":\r\n                this.setState({\r\n                    currentEvent: {\r\n                        event_summary: this.state.currentEvent.event_summary,\r\n                        event_org: event.target.value,\r\n                        event_date: this.state.currentEvent.event_date,\r\n                        event_location: this.state.currentEvent.event_location,\r\n                        event_id: this.state.currentEvent.event_id,\r\n                    }\r\n                });\r\n                break;\r\n            case \"loc\":\r\n                this.setState({\r\n                    currentEvent: {\r\n                        event_summary: this.state.currentEvent.event_summary,\r\n                        event_org: this.state.currentEvent.event_org,\r\n                        event_date: this.state.currentEvent.event_date,\r\n                        event_location: event.target.value,\r\n                        event_id: this.state.currentEvent.event_id,\r\n                    }\r\n                });\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n    doSearch(event){\r\n        event.preventDefault();\r\n        this.getEventList(1);\r\n        this.closeEventInfo();\r\n    };\r\n    deleteEvent(index, e){\r\n        let currentEvent = this.state.data[index]\r\n        let eventId = currentEvent.event_id;\r\n        console.log(eventId);\r\n        //console.log(requestOptions)\r\n        fetch(`${APIHost}/api/event/${eventId}`, {method: 'DELETE', credentials: 'include' })\r\n            .then(res => res.json())\r\n            .then(result => {\r\n                //console.log(result)\r\n                this.getEventList(1);\r\n            });\r\n    };\r\n    openEditForm(index, e){\r\n        if(typeof index == 'number'){\r\n            this.setState({currentEvent: this.state.data[index]})\r\n            this.setState({focusEdit: 'Edit'})\r\n        }else{\r\n            this.setState({\r\n                currentEvent: {\r\n                    event_summary: '',\r\n                    event_org: '',\r\n                    event_date: '',\r\n                    event_location: '',\r\n                    event_id: -1,\r\n                }\r\n            })\r\n            this.setState({focusEdit: 'New'})\r\n        }\r\n    };\r\n    submitEvent(){\r\n        let method = '';\r\n        if(this.state.focusEdit === 'New'){\r\n            method = 'POST';\r\n        }else if(this.state.focusEdit === 'Edit'){\r\n            method = 'PUT'\r\n        }\r\n        let requestOptions = {\r\n            method: method,\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(this.state.currentEvent),\r\n            credentials: 'include' \r\n        };\r\n        console.log(requestOptions)\r\n        fetch(`${APIHost}/api/event`, requestOptions)\r\n            .then(res => res.json())\r\n            .then(result => {\r\n                //console.log(result)\r\n                this.getEventList(1);\r\n            });\r\n    };\r\n    async flushData(){\r\n        this.setState({flushing: true})\r\n        await fetch(`${APIHost}/api/event`, {credentials: 'include' })\r\n            .then(res => res.json())\r\n            .then(result => {\r\n                //console.log(result)\r\n        });\r\n        await this.getEventList(1);\r\n        this.setState({flushing: false})\r\n    };\r\n    showFavorite(){\r\n        console.log(\"show favorite\");\r\n        fetch(`${APIHost}/api/favorite`,{credentials: 'include'})\r\n            .then(res=>res.json())\r\n            .then(result=>{\r\n                console.log(result);\r\n                this.setState({\r\n                    favorite: 1,\r\n                    list: result\r\n                });\r\n            }\r\n        )\r\n    };\r\n\r\n    deleteFavorite(index){\r\n        console.log(\"delete favorite\");\r\n        let currentEvent = this.state.list[index]\r\n        let eventId = currentEvent.event_id;\r\n        console.log(eventId);\r\n        //console.log(requestOptions)\r\n        fetch(`${APIHost}/api/favorite/eventId/${eventId}`, {method: 'DELETE', credentials: 'include' })\r\n            .then(res => res.json())\r\n            .then(result => {\r\n                console.log(result)\r\n                this.showFavorite();\r\n            });\r\n    }\r\n    closeFavorite(){\r\n        console.log(\"close favorite\");\r\n        this.setState({\r\n            favorite:0,\r\n            list:[]\r\n        })\r\n    }\r\n\r\n    render(){\r\n        if(sessionStorage.getItem('LoginStatus') === 'false'){\r\n            return <Redirect to='/login' />\r\n        }else{\r\n            return(\r\n                <div>\r\n                    <nav className=\"navbar navbar-light navbar-expand bg-light\">\r\n                        <form className=\"form-inline input-group mr-2\" onSubmit={this.doSearch}>\r\n                            <div className=\"input-group-prepend mr-2\">\r\n                                <select id=\"searchField\" className=\"form-control\" onChange={this.handleChange} value={this.state.searchField}>\r\n                                    <option value=\"event_summary\">Summary</option>\r\n                                    <option value=\"event_date\">Date</option>\r\n                                    <option value=\"event_org\">Organizer</option>\r\n                                    <option value=\"event_location\">Location</option>\r\n                                </select>\r\n                            </div>\r\n                            <input id=\"searchQuery\" className=\"form-control rounded-left\" type=\"text\" placeholder=\"Search\" value={this.state.searchQuery} onChange={this.handleChange} />\r\n                            <div className=\"input-group-append\">\r\n                                <button className=\"btn btn-outline-success\" type=\"button\" onClick={this.doSearch}>Search</button>\r\n                            </div>\r\n                        </form>\r\n                    </nav>\r\n                    <div style={{display: (this.state.selected === 0 && this.state.favorite === 0) ? 'block' : 'none'}}>\r\n                        <nav className=\"navbar navbar-light navbar-expand bg-light justify-content-end\">\r\n                            <span className=\"small mr-2\">Sort By</span>\r\n                            <ul className=\"navbar-nav mr-2\">\r\n                                <li className=\"nav-item mr-2\">\r\n                                    <select id=\"sortType\" className=\"form-control-sm\" onChange={this.handleChange} value={this.state.sortType}>\r\n                                        <option value=\"event_summary\">Summary</option>\r\n                                        <option value=\"event_date\">Date</option>\r\n                                        <option value=\"event_org\">Organizer</option>\r\n                                        <option value=\"event_location\">Location</option>\r\n                                    </select>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <select id=\"sortMode\" className=\"form-control-sm\" onChange={this.handleChange} value={this.state.sortMode}>\r\n                                        <option value=\"-\">Dsc</option>\r\n                                        <option value=\"\">Asc</option>\r\n                                    </select>\r\n                                </li>\r\n                            </ul>\r\n                            <button className=\"btn btn-primary mr-2\" onClick={this.openEditForm} data-toggle=\"modal\" data-target=\"#openEditFormForm\">New Event</button>\r\n                            <button className=\"btn btn-success\" onClick={this.flushData} disabled={this.state.flushing}>{this.state.flushing? <span className=\"spinner-border spinner-border-sm\"></span> : ''} Flush Data</button>\r\n                            <button className=\"btn btn-info ml-2 my-2 my-sm-0\" type=\"button\" onClick={this.showFavorite}>My Favorites</button>\r\n                        </nav>              \r\n                        <ul className=\"list-group my-2\">\r\n                            {this.state.data.map((event, index) => (\r\n                                <li className=\"list-group-item\" key={index} id={index}>\r\n                                    <div className=\"card-body\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-10\">\r\n                                                <button className=\"btn btn-lg btn-outline-dark\" onClick={(e) => this.openEventInfo(index + 1, e)}>{event.event_summary}</button>\r\n                                                <p className=\"card-text\">Organizer: {event.event_org}</p>\r\n                                                <p className=\"card-text\">Location: {event.event_location}</p>\r\n                                                <p className=\"card-text small\">Date: {event.event_date}</p>\r\n                                            </div>\r\n                                            <div className=\"col-2\">\r\n                                                <button className=\"btn btn-info m-2\" onClick={(e) => this.openEditForm(index, e)} data-toggle=\"modal\" data-target=\"#openEditFormForm\">Edit</button>\r\n                                                <br/>\r\n                                                <button className=\"btn btn-danger m-2\" onClick={(e) => this.deleteEvent(index, e)}>Delete</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                        <nav className=\"container my-2\">\r\n                            <button className=\"btn btn-primary\" disabled={this.state.page === 1} onClick={this.lastPage}>&laquo;</button>\r\n                            <button className=\"btn btn-primary float-right\" disabled={this.state.data.length < 10} onClick={this.nextPage}>&raquo;</button>\r\n                        </nav>\r\n                    </div>\r\n                    <div style={{display: this.state.selected > 0 ? 'block' : 'none', height: '100vh'}} >\r\n                        <div className=\"row h-100 bg-secondary\">\r\n                            <div className=\"col-2 align-self-center text-center\">\r\n                                <button className=\"btn\" disabled={this.state.selected === 1} onClick={this.lastEvent}>\r\n                                    <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 24 24\">\r\n                                        <path d=\"M7.41,15.41L12,10.83L16.59,15.41L18,14L12,8L6,14L7.41,15.41Z\"></path>\r\n                                    </svg>\r\n                                </button>\r\n                                <button className=\"btn\" onClick={this.closeEventInfo}>\r\n                                    <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 24 24\">\r\n                                        <path d=\"M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z\"></path>\r\n                                    </svg>\r\n                                </button>\r\n                                <button className=\"btn\" disabled={this.state.selected === 10} onClick={this.nextEvent}>\r\n                                    <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 24 24\">\r\n                                        <path d=\"M7.41,8.58L12,13.17L16.59,8.58L18,10L12,16L6,10L7.41,8.58Z\"></path>\r\n                                    </svg>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"col-10 bg-light\">\r\n                                <Event currentEvent={this.state.currentEvent} userId={this.props.userId}></Event>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div style = {{display: this.state.favorite > 0 ? 'block' : 'none'}}>\r\n                        <ul className=\"list-group my-2\">\r\n                            {this.state.list.map((event, index) => (\r\n                                <li className=\"list-group-item\" key={index} id={index}>\r\n                                    <div className=\"card-body\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-10\">\r\n                                                <button className=\"btn btn-lg btn-outline-dark\" onClick={(e) => this.openEventInfo(index + 1, e)}>{event.event_summary}</button>\r\n                                                <p className=\"card-text\">Organizer: {event.event_org}</p>\r\n                                                <p className=\"card-text\">Location: {event.event_location}</p>\r\n                                                <p className=\"card-text small\">Date: {event.event_date}</p>\r\n                                            </div>\r\n                                            <div className=\"col-2\">\r\n                                                <br/>\r\n                                                <button className=\"btn btn-danger m-2\" onClick={(e) => this.deleteFavorite(index)}>Delete</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                        <button className=\"btn btn-info m-2\" onClick={(e) => this.closeFavorite()}>Back</button>\r\n                    </div>\r\n                    <div className=\"modal fade\" role=\"dialog\" id=\"openEditFormForm\">\r\n                        <div className=\"modal-dialog\" role=\"document\">\r\n                            <div className=\"modal-content\">\r\n                                <div className=\"modal-header\">\r\n                                    <h5 className=\"modal-title\">{`${this.state.focusEdit} Event`}</h5>\r\n                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                    <span aria-hidden=\"true\">&times;</span>\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"modal-body\">\r\n                                    <form>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"summary\">Summary</label>\r\n                                            <textarea type=\"text\" name=\"summary\" id=\"summary\" className=\"form-control\" placeholder=\"Summary\" rows=\"2\" value={this.state.currentEvent.event_summary} onChange={this.handleChange}></textarea>\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"org\">Organizer</label>\r\n                                            <textarea type=\"text\" name=\"org\" id=\"org\" className=\"form-control\" placeholder=\"Organizer\" rows=\"2\" value={this.state.currentEvent.event_org} onChange={this.handleChange}></textarea>\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"date\">Date</label>\r\n                                            <textarea type=\"text\" name=\"date\" id=\"date\" className=\"form-control\" placeholder=\"15 July 2020\" rows=\"2\" value={this.state.currentEvent.event_date} onChange={this.handleChange}></textarea>\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"loc\">Location</label>\r\n                                            <textarea type=\"text\" name=\"loc\" id=\"loc\" className=\"form-control\" placeholder=\"Location\" rows=\"2\" value={this.state.currentEvent.event_location} onChange={this.handleChange}></textarea>\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button type=\"button\" className=\"btn btn-primary\" onClick={this.submitEvent} data-dismiss=\"modal\">Save changes</button>\r\n                                    <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>)\r\n            };\r\n        }\r\n}\r\n\r\n\r\nexport default withRouter(Main);","import React from 'react';\r\nimport NavBar from './NavBar';\r\nimport Main from './Main';\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass Header extends React.Component{\r\n  render(){\r\n      return(\r\n        <header className=\"App-header\">\r\n          <NavBar></NavBar>\r\n        </header>\r\n      )\r\n  }\r\n}\r\n\r\n\r\nclass App extends React.Component{\r\n  render(){\r\n    if(sessionStorage.getItem('LoginStatus') === 'true'){\r\n      return (\r\n        <div className=\"App\">\r\n          <Header/>\r\n          <Main userId={1}/>\r\n        </div>\r\n      )\r\n    }else{\r\n      return <Redirect to ='/Login'/>\r\n    }\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport APIHost from '../config'\r\n\r\nclass Login extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n        };\r\n        this.login = this.login.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    };\r\n    login(){\r\n        console.log(APIHost)\r\n        if(this.state.email && this.state.password){\r\n            let requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    email: this.state.email,\r\n                    password: btoa(this.state.password),\r\n                    }),\r\n                credentials: 'include'\r\n            };\r\n            fetch(`${APIHost}/index/login`, requestOptions)\r\n                .then(res => res.json())\r\n                .then(result=>{\r\n                    console.log(result);\r\n                    if(result.msg === \"fail\"){\r\n                        alert('Incorrect email or pswd!')\r\n                    }else{\r\n                        sessionStorage.setItem('LoginStatus', result.loginStatus);\r\n                        sessionStorage.setItem('userName', result.userName);\r\n                        sessionStorage.setItem('userId', result.userId);\r\n                        sessionStorage.getItem('userId')\r\n                    }\r\n                    this.forceUpdate()\r\n                })\r\n        }else{\r\n            alert('Enter email & pswd!')\r\n        }\r\n    };\r\n    handleChange(event){\r\n        switch (event.target.id) {\r\n            case \"email\":\r\n                this.setState({\r\n                    email: event.target.value\r\n                });\r\n                break;\r\n            case \"password\":\r\n                this.setState({\r\n                    password: event.target.value\r\n                })\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n    render(){\r\n        if(sessionStorage.getItem('LoginStatus') === 'true'){\r\n            return <Redirect to='/event'/>\r\n        }else{\r\n            return (\r\n            <div className=\"container\">\r\n                <form>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" name=\"email\" id=\"email\" className=\"form-control\" placeholder=\"\" value={this.state.email} onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" name=\"password\" id=\"password\" className=\"form-control\" placeholder=\"\" value={this.state.password} onChange={this.handleChange} />\r\n                    </div>\r\n                    <button type=\"button\" className=\"btn btn-primary\" onClick={this.login}>Login</button>\r\n                </form>\r\n            </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App.jsx';\r\nimport Login from './components/Login.jsx';\r\nimport {Route, BrowserRouter as Router, Redirect} from 'react-router-dom';\r\n\r\nsessionStorage.setItem('LoginStatus', false)\r\n\r\nclass Index extends React.Component{\r\n  render(){\r\n    if(sessionStorage.getItem('LoginStatus') === true){\r\n      return <Redirect to='/event'/>\r\n    }else{\r\n      return <Redirect to='/login' />\r\n    }\r\n  }\r\n}\r\n\r\nReactDOM.render(\r\n  <Router>\r\n      <Route path=\"/\" component={Index}/>\r\n      <Route path=\"/login\" component={Login}/>\r\n      <Route path=\"/event\" component={App}/>\r\n  </Router>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}